openapi: "3.0.2"
info:
  title: SpringProject's API
  description: API for student grade
  version: 1.0.0
  contact:
    email: hei.raymond.2@gmail.com
servers:
- url: http://STD21099.springproject.io/
tags:
- name: Students
- name: Groups
- name: Grades
- name: Subjects
- name: Examens

paths:
  /students:
    get:
      tags:
      - Students
      summary: Get a list of students
      operationId: getStudent
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int64
      - name: page_size
        in: query
        required: false
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
        400:
          description: Bad request
    post:
      tags:
      - Students
      summary: Add a new student
      operationId: addStudent
      requestBody:
        description: Student object that needs to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStudent'
        required: true
      responses:
        200:
          description: Student added
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
        400:
          description: Bad request
  /student/{id}:
    get:
      tags:
      - Students
      summary: Get a student
      operationId: getStudentid
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Student'
        400:
          description: Bad request
    delete:
      tags:
      - Students
      summary: Delete a student by ID
      operationId: deleteStudentid
      parameters:
      - name: id
        in: path
        required: true
        schema:
          maximum: 10.0
          minimum: 1.0
          type: integer
          format: int64
      responses:
        200:
          description: sucsses
          content:
            text/plain:
              example: Returns the id of the deleted student
        400:
          description: Bad request
    put:
      tags:
      - Students
      summary: Change Student by ID
      description: Multiple status values can be provided with comma separated strings
      operationId: putStudentID
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStudent'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Student'
        400:
          description: Bad request
    patch:
      tags:
      - Students
      summary: Change some details of Student by ID
      description: "Possible changes on : name & group"
      operationId: pathStudentID
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStudent'
            examples:
              changeName:
                summary: Change name
                value:
                  name : New name
              changeGroup:
                summary: Change group
                value:
                  group : 'G1'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/CreateStudent'
        400:
          description: Bad request
  /groups:
    get:
      tags:
      - Groups
      summary: Get a list of groups
      operationId: getgroupe
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int64
      - name: page_size
        in: query
        required: false
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Groups'
        400:
          description: Bad request
    post:
      tags:
      - Groups
      summary: Add a new group
      operationId: addGroup
      requestBody:
        description: Group object that needs to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGroups'
        required: true
      responses:
        200:
          description: Group added
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
        400:
          description: Bad request
  /group/{id}:
    get:
      tags:
      - Groups
      summary: Get a groupe
      operationId: getgroupeid
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Groups'
        400:
          description: Bad request
    delete:
      tags:
      - Groups
      summary: Delete a group by ID
      operationId: deletegroupeid
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Successfully deleted
          content: {}
        400:
          description: Bad request
    put:
      tags:
      - Groups
      summary: Change groupe by ID
      description: Multiple status values can be provided with comma separated strings
      operationId: putgroupeID
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGroups'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Groups'
        400:
          description: Bad request
    patch:
      tags:
      - Groups
      summary: Change some details of Group by ID
      description: "Possible changes on : name "
      operationId: pathStudentID
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStudent'
            examples:
              changeName:
                summary: Change name
                value:
                  name : New name
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/CreateStudent'
        400:
          description: Bad request
  /grades:
    get:
      tags:
      - Grades
      summary: Get a list of grades
      operationId: getgrade
      parameters:
      - name: page
        in: query
        required: false
        schema:
          maximum: 10.0
          minimum: 1.0
          type: integer
          format: int64
      - name: page_size
        in: query
        required: false
        schema:
          maximum: 10.0
          minimum: 1.0
          type: integer
          format: int64
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Grades'
        400:
          description: Bad request
    post:
      tags:
      - Grades
      summary: Add a new grade
      operationId: addgrade
      requestBody:
        description: grade object that needs to be added
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreateGrades'
        required: true
      responses:
        200:
          description: grade added
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Grades'
        400:
          description: Bad request
  /grade/{id}:
    get:
      tags:
      - Grades
      summary: Get a grade
      operationId: getgradeid
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Grades'
        400:
          description: Bad request
    delete:
      tags:
      - Grades
      summary: Delete a grade by ID
      operationId: deletegradeid
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200: 
          description: Successfully deleted
          content: {}
        400:
          description: Bad request
    put:
      tags:
      - Grades
      summary: Change grade by ID
      description: Multiple status values can be provided with comma separated strings
      operationId: putgradeID
      parameters:
      - name: id
        in: path
        required: true
        schema:
          maximum: 10.0
          minimum: 1.0
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CreateGrades'
        400:
          description: Bad request
    patch:
      tags:
      - Grades
      summary: Change some details of grades by ID
      description: "Possible changes on : subject & average "
      operationId: pathGradeID
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGrades'
            examples:
              changeSubject:
                summary: Change subject
                value:
                  name : New subject
              changeAverage:
                summary: Change average
                value:
                  name : New average
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/CreateGrades'
        400:
          description: Bad request
  /subjects:
    get:
      tags:
      - Subjects
      summary: Get a list of subjects
      operationId: getsubject
      parameters:
      - name: page
        in: query
        required: false
        schema:
          maximum: 10.0
          minimum: 1.0
          type: integer
          format: int64
      - name: page_size
        in: query
        required: false
        schema:
          maximum: 10.0
          minimum: 1.0
          type: integer
          format: int64
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subjects'
        400:
          description: Bad request
    post:
      tags:
      - Subjects
      summary: Add a new subject
      operationId: addsubject
      requestBody:
        description: subject object that needs to be added
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreateSubjects'
        required: true
      responses:
        200:
          description: grade added
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subjects'
  /subject/{id}:
    get:
      tags:
      - Subjects
      summary: Get a subject
      operationId: getsubjectid
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Subjects'
        400:
          description: Bad request
    delete:
      tags:
      - Subjects
      summary: Delete a subject by ID
      operationId: deletesubjectid
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200: 
          description: Successfully deleted
          content: {}
        400:
          description: Bad request
    put:
      tags:
      - Subjects
      summary: Change subject by ID
      description: Multiple status values can be provided with comma separated strings
      operationId: putsubjectID
      parameters:
      - name: id
        in: path
        required: true
        schema:
          maximum: 10.0
          minimum: 1.0
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CreateSubjects'
        400:
          description: Bad request
    patch:
      tags:
      - Subjects
      summary: Change some details of subjects by ID
      description: "Possible changes on : namme "
      operationId: pathSubjectID
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSubjects'
            examples:
              changenName:
                summary: Change name
                value:
                  name : New name
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/CreateSubjects'
        400:
          description: Bad request

  /examens:
    get:
      tags:
      - Examens
      summary: Get a list of examens
      operationId: getexamen
      parameters:
      - name: page
        in: query
        required: false
        schema:
          maximum: 10.0
          minimum: 1.0
          type: integer
          format: int64
      - name: page_size
        in: query
        required: false
        schema:
          maximum: 10.0
          minimum: 1.0
          type: integer
          format: int64
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Examens'
        400:
          description: Bad request
    post:
      tags:
      - Examens
      summary: Add a new examen
      operationId: addexamen
      requestBody:
        description: subject object that needs to be added
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreateExamens'
        required: true
      responses:
        200:
          description: examen added
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Examens'
  /examen/{id}:
    get:
      tags:
      - Examens
      summary: Get a examen
      operationId: getexamenid
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Examens'
        400:
          description: Bad request
    delete:
      tags:
      - Examens
      summary: Delete a examen by ID
      operationId: deleteExamenid
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200: 
          description: Successfully deleted
          content: {}
        400:
          description: Bad request
    put:
      tags:
      - Examens
      summary: Change examen by ID
      description: Multiple status values can be provided with comma separated strings
      operationId: putexamenID
      parameters:
      - name: id
        in: path
        required: true
        schema:
          maximum: 10.0
          minimum: 1.0
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CreateExamens'
        400:
          description: Bad request
    patch:
      tags:
      - Examens
      summary: Change some details of examens by ID
      description: "Possible changes on : title & date_exam "
      operationId: pathSubjectID
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateExamens'
            examples:
              changenTitle:
                summary: Change title
                value:
                  name : New title
              changenDateExamen:
                summary: Change date examen
                value:
                  name : New date examen
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/CreateExamens'
        400:
          description: Bad request




components:
  schemas:
    CreateStudent:
      type: object
      properties:
        firstName:
          type: string
          example: Daris
        lastName:
          type: string
          example: Raymond
        email:
          type: string
          example: hei.raymond.2@gmail.com
        gender:
          type: string
          example: M or F
        group:
          type: string
          example: 3
    Student:
      type: object
      properties:
        id:
          type: integer
          format: int64
        firstName:
          type: string
          example: Daris
        lastName:
          type: string
          example: Raymond
        email:
          type: string
          example: hei.raymond.2@gmail.com
        gender:
          type: string
          example: M or F
        group:
          type: string
          example: G3

    CreateGroups:
      type: object
      properties:
        name:
          type: string
          example: G3
        group:
          type: string
          example: goupe G3
    Groups:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          example: G3
        group:
          type: string
          example: goupe G3
        

    CreateGrades:
      type: object
      properties:
        average:
          type: number
          format: double
        student:
          type: string
          example: Daris
        subject:
          type: string
          example: Base de données
        examen:
          type: string
          example: final preview
    Grades:
      type: object
      properties:
        id:
          type: integer
        subject:
          type: string
          example: Base de données
        average:
          type: number
          format: double
        student:
          type: string
          example: Daris
        examen:
          type: string
          example: final preview
          
    CreateSubjects:
      type: object
      properties:
        name:
          type: string
          example: PROG2
    Subjects:
      type: object
      properties:
        id: 
          type: integer
        name:
          type: string
          example: PROG2

    CreateExamens:
      type: object
      properties:
        title:
          type: string
          example: First Quarter
        date_exam:
          type: number
          example: '2022-09-15'
    Examens:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
          example: First Quarter
        date_exam:
          type: number
          example: '2022-09-15'